<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Cartif.XamlResources"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="11 pt" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="11 pt" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Padding" Value="4,0,0,0" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MetroComboBox}">
        <Setter Property="FontSize" Value="11 pt" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="11 pt" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource TextHighlightBrush}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MetroDataGrid}">
        <!--<Setter Property="AlternatingRowBackground" Value="#b8ccc3" />-->
        <Setter Property="GridLinesVisibility" Value="Vertical" />
        <Setter Property="FontSize" Value="9 pt" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightColorBrush}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush4}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
                    <!--<Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}" />
                    <Setter Property="BorderThickness" Value="1,0,1,0" />-->
                    <Setter Property="Padding" Value="5,0,2,2" />
                    <!--<Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                        </Trigger>
                    </Style.Triggers>-->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}">
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Controls:ControlsHelper.HeaderFontSize" Value="16" />
        <Setter Property="Background" Value="{StaticResource LightColorBrush}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="BorderBrush" Value="{StaticResource LightColorBrush}" />
    </Style>

    
    
    <!--Modification of the default template-->
    <!--<Style TargetType="GroupBox">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0"
                                CornerRadius="0" Grid.Row="1" Grid.RowSpan="3" />
                        <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                                    <MultiBinding.Converter>
                                        <BorderGapMaskConverter />
                                    </MultiBinding.Converter>
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                                <Border BorderBrush="White"
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" />
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0"
                                Grid.RowSpan="2">
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    Content="{TemplateBinding Header}"
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                    ContentSource="Header" RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}" Grid.Column="1"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                Margin="{TemplateBinding Padding}" Grid.Row="2"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>